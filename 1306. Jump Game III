    bool canReach(vector<int>& arr, int start) {
        int n = arr.size(); 
        unordered_set<int> target, visited;
        visited.insert(start);
        queue<int> q; 
        q.push(start);
        
        for (int i = 0; i < n; ++i) {
            if (arr[i] == 0) target.insert(i);
        }
        
        while (!q.empty()) {
            auto i = q.front(); q.pop(); 
            if (target.count(i)) return true;
            
            if (i + arr[i] >= 0 && i + arr[i] < n && !visited.count(i + arr[i])) {
                visited.insert(i + arr[i]);
                q.push(i + arr[i]);
            }
            if (i - arr[i] >= 0 && i - arr[i] < n && !visited.count(i - arr[i])) {
                visited.insert(i - arr[i]);
                q.push(i - arr[i]);
            }
        }
        return false; 
    }
